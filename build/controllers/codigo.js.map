{"version":3,"sources":["../../app/controllers/codigo.js"],"names":["solicitarCodigo","stub","args","data","codigo","codigoAsBytes","codigosDetails","putStatePromise","JSON","parse","toString","err","Error","console","info","i","quantitade","status","Buffer","from","stringify","log","push","putState","Promise","all","codigosDetailsAsBytes","setEvent","usoCodigo"],"mappings":";;;;;;;AAEA;;;;;;AAEA;;AAEO,IAAMA,4CAAkB,eAAlBA,eAAkB,CAAOC,IAAP,EAAaC,IAAb,EAAsB;AACnD,MAAIC,aAAJ;AACA,MAAIC,eAAJ;AACA,MAAIC,sBAAJ;AACA,MAAMC,iBAAiB,EAAvB;AACA,MAAMC,kBAAkB,EAAxB;;AAEA;AACA,MAAI;AACFJ,WAAOK,KAAKC,KAAL,CAAWP,KAAKQ,QAAL,EAAX,CAAP;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,UAAM,IAAIC,KAAJ,CAAU,oEAAV,CAAN;AACD;AACDC,UAAQC,IAAR,CAAa,+BAAb;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,KAAKa,UAAzB,EAAqCD,KAAK,CAA1C,EAA6C;AAC3CX,aAAS;AACPA,cAAQ,sBADD;AAEP;AACA;AACA;AACAa,cAAQ;AALD,KAAT;AAOAZ,oBAAgBa,OAAOC,IAAP,CAAYX,KAAKY,SAAL,CAAehB,MAAf,CAAZ,CAAhB;AACAS,YAAQQ,GAAR,CAAYhB,aAAZ;AACAC,mBAAeF,OAAOA,MAAtB,IAAgCA,MAAhC;AACAG,oBAAgBe,IAAhB,CAAqBrB,KAAKsB,QAAL,CAAcnB,OAAOA,MAArB,EAA6BC,aAA7B,CAArB;AACD;;AAED,QAAMmB,QAAQC,GAAR,CAAYlB,eAAZ,CAAN;AACA,MAAMmB,wBAAwBR,OAAOC,IAAP,CAAYX,KAAKY,SAAL,CAAed,cAAf,CAAZ,CAA9B;;AAEAL,OAAK0B,QAAL,CAAc,eAAd,EAA+BD,qBAA/B;AACAb,UAAQC,IAAR,CAAa,oBAAb;AACAD,UAAQQ,GAAR,CAAYf,cAAZ;AACAO,UAAQC,IAAR,CAAa,oBAAb;AACAD,UAAQC,IAAR,CAAa,uCAAb;;AAEA;AACD,CAtCM,C,CANP;AACA;AA6CO,IAAMc,gCAAY,eAAZA,SAAY,GAAY,CAAE,CAAhC;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"codigo.js","sourcesContent":["// const config = require('../config.js');\n// const validationOptions = { recursive: true, abortEarly: true, stripUnknown: true };\nimport generateCode from '../utils';\n\n// (tipoDestinatario, identificador, idServico, qtdEtiquetas, usuario, senha)\n\nexport const solicitarCodigo = async (stub, args) => {\n  let data;\n  let codigo;\n  let codigoAsBytes;\n  const codigosDetails = {};\n  const putStatePromise = [];\n\n  // 1. Parse JSON stringified request\n  try {\n    data = JSON.parse(args.toString());\n  } catch (err) {\n    throw new Error('NÃ£o foi possivel decodificar o JSON, por favor verifique o formato');\n  }\n  console.info('--- start solicitarCodigo ---');\n  for (let i = 0; i < data.quantitade; i += 1) {\n    codigo = {\n      codigo: generateCode(),\n      // organization: 12,\n      // criado: \"2018-12-12 12:12:00\",\n      // usado: \"2019-12-12 12:12:00\",\n      status: 1\n    };\n    codigoAsBytes = Buffer.from(JSON.stringify(codigo));\n    console.log(codigoAsBytes);\n    codigosDetails[codigo.codigo] = codigo;\n    putStatePromise.push(stub.putState(codigo.codigo, codigoAsBytes));\n  }\n\n  await Promise.all(putStatePromise);\n  const codigosDetailsAsBytes = Buffer.from(JSON.stringify(codigosDetails));\n\n  stub.setEvent('codigoCreated', codigosDetailsAsBytes);\n  console.info('==================');\n  console.log(codigosDetails);\n  console.info('==================');\n  console.info('--- end create codigoRastreamento ---');\n\n  // return resultAsBytes;\n};\n\nexport const usoCodigo = async () => {};\n\n// Service indicator\n// 3 to 10 n8 Serial number\n// 11 n1 Check digit\n// 12 and 13 a2 Country code\n\n// DIGITS => Formato\n// 1-2 => [AZ] (aleatorio)\n// 3-10 => [0-9] (aleatorio)\n// 11 => [0-9] (check Digit)\n// 12-13 => [AZ] (aleatorio - menos \"BR\")\n\n// GET /codigos_rastreamento/12\n\n// RETURN\n// {\n//   \"codigos\": [\n//     \"BR9380921SW\",\n//     \"BR838838SW\",\n//     \"BR9380921SWs\",\n//     \"BR9380921SW\",\n//     \"BR838838SW\",\n//     \"BR9380921SWs\",\n//     \"BR9380921SW\",\n//     \"BR838838SW\",\n//     \"BR9380921SWs\",\n//     \"BR9380921SWs\",\n//     \"BR9380921SWs\",\n//     \"BR9380921SWs\"\n//   ],\n//   \"quantidade\": 12,\n//   \"criado\": \"2018-12-12 12:12:00\"\n// }\n\n// ATIVO\n\n// status: 1 => criado\n// status: 2 => usado\n// status: 3 => Expirado\n// status: 4 => Arquivado\n\n// POST /uso-codigo/BR9380921SW\n\n// {\n//   \"organization\":1,\n//   \"rota\": \"BLU-BRS\",\n//   \"servico\": \"SEDEX\",\n//   \"servico_code\": \"81983\",\n//   \"usado\": \"2019-12-12 12:12:00\"\n// }\n"]}